swagger: '2.0'
info:
  title: Bank Argent API Documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:

  # Module Utilisateur (User)
  
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for user login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login successful
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for user signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup successful
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get User Profile
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid request
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Profile
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error

  # Module Compte (Account)
  
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Get User Accounts
      description: Fetches the list of user accounts.
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successfully
          schema:
            $ref: '#/definitions/AccountListResponse'
        '400':
          description: Invalid request

  /user/accounts/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Get Account by ID
      description: Fetches a specific user account by ID.
      produces:
        - application/json
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: Account identifier
      responses:
        '200':
          description: Account retrieved successfully
          schema:
            $ref: '#/definitions/AccountResponse'
        '400':
          description: Invalid request
        '404':
          description: Account not found

  # Endpoint pour lier comptes et transactions
  /user/accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Transactions for a Specific Account
      description: Retrieves all transactions associated with the specified account.
      produces:
        - application/json
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: Account identifier
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request
        '404':
          description: Account not found

  # Module Transactions
  
  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Transaction Details
      description: Fetches detailed information of a specific transaction.
      produces:
        - application/json
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: Transaction ID
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request
        '404':
          description: Transaction not found

  /user/transactions/categories:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Available Transaction Categories
      description: Returns a list of available transaction categories sorted alphabetically.
      produces:
        - application/json
      responses:
        '200':
          description: Transaction categories retrieved successfully
          schema:
            type: array
            items:
              type: string
        '400':
          description: Invalid request

  /user/transactions/{transactionId}/category:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction Category
      description: Update the category of a specific transaction.
      produces:
        - application/json
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: Transaction ID
        - in: body
          name: body
          required: true
          description: New category for the transaction
          schema:
            $ref: '#/definitions/TransactionCategory'
      responses:
        '200':
          description: Transaction category updated successfully
        '400':
          description: Invalid category
        '404':
          description: Transaction not found

  /user/transactions/{transactionId}/note:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction Note
      description: Update the note associated with a specific transaction.
      produces:
        - application/json
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: Transaction ID
        - in: body
          name: body
          required: true
          description: Updated transaction note
          schema:
            $ref: '#/definitions/TransactionNote'
      responses:
        '200':
          description: Transaction note updated successfully
        '400':
          description: Invalid note
        '404':
          description: Transaction not found

  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Current Month Transactions Grouped by Account
      description: Retrieves all transactions for the current month grouped by account.
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: object
            additionalProperties:
              type: array
              items:
                $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  Login:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  User:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      userName:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
  AccountListResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/AccountResponse'
  AccountResponse:
    type: object
    properties:
      id:
        type: string
      balance:
        type: number
      type:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string         # Lien avec le compte
      amount:
        type: number
      date:
        type: string
        format: date-time
      description:
        type: string
      category:
        type: string
      note:
        type: string
  TransactionNote:
    type: object
    properties:
      note:
        type: string
  TransactionCategory:
    type: object
    properties:
      category:
        type: string
